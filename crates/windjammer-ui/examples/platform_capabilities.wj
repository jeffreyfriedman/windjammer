// Note: This is a conceptual example showing Windjammer UI syntax
// In a real application, types would be imported from windjammer_ui

// Platform Capabilities Example
// Demonstrates filesystem, GPS, camera, clipboard, and notifications

    Filesystem, GPS, Camera, Clipboard, Notifications,
    Location, Notification, CameraImage
}

fn demo_filesystem() {
    print("üìÅ Filesystem API Demo")
    print("=" * 40)
    
    let fs = Filesystem.new()
    
    // Request permission
    fs.request_permission("/tmp").unwrap()
    print("‚úÖ Permission granted for /tmp")
    
    // Write file
    let path = "/tmp/windjammer_test.txt"
    fs.write_text(path, "Hello from Windjammer UI!").unwrap()
    print("‚úÖ Wrote file: {path}")
    
    // Read file
    let content = fs.read_text(path).unwrap()
    print("‚úÖ Read file: \"{content}\"")
    
    // Check existence
    print("‚úÖ File exists: {}", fs.exists(path))
    
    // List directory
    let files = fs.list_dir("/tmp").unwrap()
    print("‚úÖ Files in /tmp: {} files", files.len())
    
    // Clean up
    print("")
}

fn demo_gps() {
    print("üìç GPS/Location API Demo")
    print("=" * 40)
    
    let gps = GPS.new()
    
    // Enable GPS
    gps.enable().unwrap()
    print("‚úÖ GPS enabled")
    
    // Set location (simulated)
    let location = Location {
        latitude: 37.7749,
        longitude: -122.4194,
        altitude: Some(10.0),
        accuracy: 5.0,
        timestamp: 1234567890,
    }
    gps.set_location(location)
    print("‚úÖ Location set (simulated)")
    
    // Get location
    let current = gps.get_location().unwrap()
    print("‚úÖ Current location:")
    print("   Latitude: {current.latitude}")
    print("   Longitude: {current.longitude}")
    print("   Altitude: {current.altitude:?}")
    print("   Accuracy: ¬±{current.accuracy}m")
    print("")
}

fn demo_camera() {
    print("üì∑ Camera API Demo")
    print("=" * 40)
    
    let camera = Camera.new()
    
    // Request permission
    camera.request_permission().unwrap()
    print("‚úÖ Camera permission granted")
    
    // Capture image
    let image = camera.capture().unwrap()
    print("‚úÖ Image captured:")
    print("   Size: {}x{}", image.width, image.height)
    print("   Format: {image.format:?}")
    print("   Data size: {} bytes", image.data.len())
    
    // Capture another
    camera.capture().unwrap()
    print("‚úÖ Second image captured")
    
    let images = camera.get_captured_images()
    print("‚úÖ Total images: {images.len()}")
    print("")
}

fn demo_clipboard() {
    print("üìã Clipboard API Demo")
    print("=" * 40)
    
    let clipboard = Clipboard.new()
    
    // Write to clipboard
    clipboard.write_text("Windjammer UI is awesome!").unwrap()
    print("‚úÖ Wrote to clipboard")
    
    // Read from clipboard
    let content = clipboard.read_text().unwrap()
    print("‚úÖ Read from clipboard: \"{content}\"")
    
    // Check if has content
    print("‚úÖ Has content: {clipboard.has_content()}")
    print("")
}

fn demo_notifications() {
    print("üîî Notifications API Demo")
    print("=" * 40)
    
    let notifications = Notifications.new()
    
    // Request permission
    notifications.request_permission().unwrap()
    print("‚úÖ Notification permission granted")
    
    // Send notifications
    notifications.send(Notification {
        title: "Welcome!".to_string(),
        body: "Windjammer UI is running".to_string(),
        icon: Some("icon.png".to_string()),
    }).unwrap()
    print("‚úÖ Notification sent: Welcome")
    
    notifications.send(Notification {
        title: "New Message".to_string(),
        body: "You have 3 unread messages".to_string(),
        icon: None,
    }).unwrap()
    print("‚úÖ Notification sent: New Message")
    
    let sent = notifications.get_sent()
    print("‚úÖ Total notifications sent: {sent.len()}")
    print("")
}

fn main() {
    print("=== Platform Capabilities Example ===\n")
    
    demo_filesystem()
    demo_gps()
    demo_camera()
    demo_clipboard()
    demo_notifications()
    
    print("üéØ Key Features:")
    print("  ‚úÖ Permission-based security model")
    print("  ‚úÖ Cross-platform API (Web, Desktop, Mobile)")
    print("  ‚úÖ Filesystem access with path restrictions")
    print("  ‚úÖ GPS/Location services")
    print("  ‚úÖ Camera capture")
    print("  ‚úÖ Clipboard read/write")
    print("  ‚úÖ Native notifications")
    
    print("\nüîí Security:")
    print("  ‚Ä¢ All capabilities require explicit permission")
    print("  ‚Ä¢ Filesystem access is path-restricted")
    print("  ‚Ä¢ Follows principle of least privilege")
    print("  ‚Ä¢ Permission denials are graceful")
    
    print("\nüåç Platform Support:")
    print("  ‚Ä¢ Web: Uses Web APIs (File API, Geolocation API, etc)")
    print("  ‚Ä¢ Desktop: Native file access, system notifications")
    print("  ‚Ä¢ Mobile: Native APIs (iOS/Android)")
}

