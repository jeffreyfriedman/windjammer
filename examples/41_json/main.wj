// Example 41: JSON Serialization
// Demonstrates JSON handling with serde_json

use std.json

@derive(Serialize, Deserialize, Debug, Clone)
struct User {
    id: int,
    name: string,
    email: string
}

fn main() {
    println!("=== JSON Demo ===")
    println!()
    
    // 1. Serialize struct to JSON
    println!("1. Serialize to JSON:")
    let user = User {
        id: 1,
        name: "Alice".to_string(),
        email: "alice@example.com".to_string()
    }
    
    let json_compact = serde_json::to_string(&user).unwrap()
    println!("   Compact: {}", json_compact)
    println!()
    
    // 2. Pretty-print JSON
    println!("2. Pretty-print JSON:")
    let json_pretty = serde_json::to_string_pretty(&user).unwrap()
    println!("{}", json_pretty)
    println!()
    
    println!("âœ¨ JSON serialization with serde_json!")
    println!("   (std.json automatically adds serde + serde_json dependencies)")
}
