// Task model

use std.time

@derive(Debug, Clone, Serialize, Deserialize)
pub struct Task {
    pub id: int,
    pub project_id: int,
    pub title: string,
    pub description: string,
    pub status: string,
    pub priority: string,
    pub assigned_to: Option<int>,
    pub created_by: int,
    pub created_at: int,
    pub updated_at: int,
    pub due_date: Option<int>,
}

@derive(Debug, Serialize, Deserialize)
pub struct CreateTaskRequest {
    pub title: string,
    pub description: string,
    pub priority: string,
    pub due_date: Option<int>,
}

@derive(Debug, Serialize, Deserialize)
pub struct UpdateTaskRequest {
    pub title: Option<string>,
    pub description: Option<string>,
    pub status: Option<string>,
    pub priority: Option<string>,
    pub due_date: Option<int>,
}

@derive(Debug, Serialize, Deserialize)
pub struct AssignTaskRequest {
    pub user_id: int,
}

@derive(Debug, Serialize, Deserialize)
pub struct TaskResponse {
    pub id: int,
    pub project_id: int,
    pub title: string,
    pub description: string,
    pub status: string,
    pub priority: string,
    pub assigned_to: Option<int>,
    pub created_by: int,
    pub created_at: int,
    pub due_date: Option<int>,
}

impl Task {
    pub fn to_response(self) -> TaskResponse {
        TaskResponse {
            id: self.id,
            project_id: self.project_id,
            title: self.title,
            description: self.description,
            status: self.status,
            priority: self.priority,
            assigned_to: self.assigned_to,
            created_by: self.created_by,
            created_at: self.created_at,
            due_date: self.due_date,
        }
    }
}
